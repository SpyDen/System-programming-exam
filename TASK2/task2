Task: Проаналізувати структуру програми на асемблері (директиви сигментації).
	Для пояснення використаю синтаксис асемблерної мови NASM, оскільки вона поступово
розвивається та має підтримку як на Microsoft системах так і на GNU/Linux або інших популярних
Unix-like системах, таких як MAC OS. Суть використання директив сигментації в інших асемблерних
мовах аналогічна.

	Отже, програма на мові Assembler складається з сигментів. Фізичний сигмент представляє собою область
пам'яті, яка зайнята командами або даними. Адреси початку сигментів зберігаються в відповідних сигментних
регістрах.
	Директива SECTION/SEGMENT (це синоніми) вказує на те, в яку секцію вихідного файлу буде асембльований
код, написаний розробником. В деяких об'єктних форматах кількість та імена секцій фіксовані, в інших користувач
може створити їх скільки захоче. Об'єктні формати Unix та bin підтримують стандартизовані імена секцій:
	.text - місце, де розташовується код програми
	.data - для ініціалізованих даних
	.bss - для неініціалізованих даних
